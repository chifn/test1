name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint:
    name: ci/lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run lint

  unit-tests:
    name: ci/unit-tests (node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm run test:unit -- --ci --reporter=jest-junit
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.node }}
          path: junit.xml

  integration:
    name: ci/integration
    runs-on: ubuntu-latest
    needs: [unit-tests]        # 可选：若 integration 依赖单元测试通过再跑；否则移除 needs，让它真的并行
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run test:integration -- --ci

  build-preview:
    name: ci/build-preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: preview-build
          path: build/

